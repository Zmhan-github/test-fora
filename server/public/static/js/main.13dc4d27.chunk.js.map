{"version":3,"sources":["components/rooms/RoomForm.jsx","components/rooms/Room.jsx","components/rooms/RoomList.jsx","components/rooms/RoomSection.jsx","components/users/User.jsx","components/users/UserList.jsx","components/users/UserForm.jsx","components/users/UserSection.jsx","components/messages/Message.jsx","components/messages/MessageList.jsx","components/messages/MessageForm.jsx","components/messages/MessageSection.jsx","components/App.jsx","index.js"],"names":["RoomForm","e","preventDefault","node","this","refs","room","RoomName","value","props","addRoom","react_default","a","createElement","onSubmit","bind","className","type","ref","placeholder","Component","Room","_this$props","setRoom","history","push","concat","id","_this$props2","active","activeRoom","href","onClick","name","withRouter","RoomList","_this","rooms","map","item","rooms_Room","Object","assign","key","RoomSection","rooms_RoomList","rooms_RoomForm","User","user","UserList","users","users_User","UserForm","userName","setUserName","UserSection","users_UserList","users_UserForm","Message","message","createdAt","fecha","format","Date","author","body","MessageList","messages","messages_Message","MessageForm","addMessage","input","undefined","MessageSection","messages_MessageList","messages_MessageForm","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","connected","socket","io","on","onConnect","onDisconnect","onAddRoom","onShowAllRooms","onMessageAdd","roomsServer","roomId","setState","length","activeRoomArray","filter","emit","_this$state","rooms_RoomSection","users_UserSection","messages_MessageSection","Main","BrowserRouter","Route","path","render","_ref","location","pathname","match","slice","components_App","parseInt","ReactDOM","src_Main","document","getElementById"],"mappings":"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","file":"static/js/main.13dc4d27.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass RoomForm extends Component {\n  onSubmit(e) {\n    e.preventDefault()\n    const node = this.refs.room\n    const RoomName = node.value\n    this.props.addRoom(RoomName)\n    node.value = ''\n  }\n  render() {\n    return (\n      <form onSubmit={ this.onSubmit.bind(this) }>\n        <div className=\"form-group\">\n          <input type=\"text\" ref=\"room\" className=\"form-control\" placeholder=\"Добавить комнату\" />\n        </div>\n      </form>\n    )\n  }\n}\n\nRoomForm.propTypes = {\n  addRoom: PropTypes.func.isRequired\n}\n\nexport default RoomForm","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\n\nclass Room extends Component {\n  onClick(e) {\n    e.preventDefault()\n    const { setRoom, room } = this.props\n    setRoom(room)\n    this.props.history.push(`/room/${room.id}`)\n  }\n  render() {\n    const { room, activeRoom } = this.props\n    const active = room === activeRoom ? 'active' : ''\n    return (\n      <li className={active}>\n        <a href=\"/\" onClick={ this.onClick.bind(this) }>{ room.name }</a>\n      </li>\n    )\n  }\n}\n\nRoom.propTypes = {\n  room: PropTypes.object.isRequired,\n  setRoom: PropTypes.func.isRequired,\n  activeRoom: PropTypes.object.isRequired\n};\n\nexport default withRouter(Room)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Room from './Room'\n\nclass RoomList extends Component {\n  render() {\n    const { rooms } = this.props\n    return (\n      <ul>\n        {\n          rooms.map(item =>\n            <Room key={item.id} room={item} {...this.props} />\n          )\n        }\n      </ul>\n    )\n  }\n}\n\nRoomList.propTypes = {\n  rooms: PropTypes.array.isRequired,\n  setRoom: PropTypes.func.isRequired,\n  activeRoom: PropTypes.object.isRequired\n}\n\nexport default RoomList","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport RoomForm from './RoomForm'\nimport RoomList from './RoomList'\n\nclass RoomSection extends Component {\n  render() {\n    return (\n      <div className=\"support panel panel-primary\">\n        <div className=\"panel-heading\">\n          <strong>Комнаты</strong>\n        </div>\n        <div className=\"panel-body rooms\">\n          <RoomList {...this.props}/>\n          <RoomForm {...this.props}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nRoomSection.propTypes = {\n  rooms: PropTypes.array.isRequired,\n  setRoom: PropTypes.func.isRequired,\n  addRoom: PropTypes.func.isRequired,\n  activeRoom: PropTypes.object.isRequired\n}\n\nexport default RoomSection","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass User extends Component {\n  render() {\n    const { user } = this.props\n    return (\n      <li>\n        { user.name }\n      </li>\n    )\n  }\n}\n\nUser.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default User","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport User from './User'\n\nclass UserList extends Component {\n  render() {\n    const { users } = this.props\n    return (\n      <ul>\n        {\n          users.map(item =>\n            <User key={item.id} user={item} />\n          )\n        }\n      </ul>\n    )\n  }\n}\n\nUserList.propTypes = {\n  users: PropTypes.array.isRequired,\n}\n\nexport default UserList","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n\nclass UserForm extends Component {\n  onSubmit(e) {\n    e.preventDefault()\n    const node = this.refs.userName\n    const userName = node.value\n    this.props.setUserName(userName)\n    node.value = ''\n  }\n  render() {\n    return (\n      <form onSubmit={ this.onSubmit.bind(this)}>\n        <div className=\"form-group\">\n          <input type=\"text\"\n            ref=\"userName\"\n            className=\"form-control\"\n            placeholder=\"Введите ваше имя\"\n          />\n        </div>\n      </form>\n    )\n  }\n}\n\nUserForm.propTypes = {\n  setUserName: PropTypes.func.isRequired,\n}\n\nexport default UserForm","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport UserList from './UserList'\nimport UserForm from './UserForm'\n\nclass UserSection extends Component {\n  render() {\n    return (\n      <div className=\"support panel panel-primary\">\n        <div className=\"panel-heading\">\n          <strong>Пользователи</strong>\n        </div>\n        <div className=\"panel-body rooms\">\n          <UserList {...this.props}/>\n          <UserForm {...this.props}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nUserSection.propTypes = {\n  users: PropTypes.array.isRequired,\n  setUserName: PropTypes.func.isRequired\n}\n\nexport default UserSection","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport fecha from 'fecha'\n\nclass Message extends Component {\n  render() {\n    let { message } = this.props\n    let createdAt = fecha.format(new Date(message.createdAt), 'MM-DD-YYYY [Время] HH:mm')\n    return (\n      <li className=\"message\">\n        <div className=\"author\">\n          <strong>{message.author}</strong>\n          <i className=\"timestamp\">{createdAt}</i>\n        </div>\n        <div className=\"body\">{message.body}</div>\n      </li>\n    )\n  }\n}\n\nMessage.propTypes = {\n  message: PropTypes.object.isRequired\n}\n\nexport default Message","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Message from './Message'\n\nclass MessageList extends Component {\n  render(){\n    return (\n      <ul>\n        { this.props.messages.map(message => \n            <Message\n              key={message.id}\n              message={message}\n            />)\n        }\n      </ul>\n    )\n  }\n}\n\nMessageList.propTypes = {\n  messages: PropTypes.array.isRequired\n}\n\nexport default MessageList","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n\nclass MessageForm extends Component {\n  onSubmit(e) {\n    e.preventDefault()\n    const node = this.refs.message\n    const message = node.value\n    this.props.addMessage(message)\n    node.value = ''\n  }\n  render(){\n    let input\n    if (this.props.activeRoom.id !== undefined ) {\n      input = (\n        <input\n          ref=\"message\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Написать сообщение\"\n        />\n      )\n    }\n    return (\n      <form onSubmit={this.onSubmit.bind(this)}>\n        <div className=\"form-group\">\n          {input}\n        </div>\n      </form>\n    )\n  }\n}\n\nMessageForm.propTypes = {\n  activeRoom: PropTypes.object.isRequired,\n  addMessage: PropTypes.func.isRequired\n}\n\nexport default MessageForm","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport MessageList from './MessageList'\nimport MessageForm from './MessageForm'\n\nclass MessageSection extends Component {\n  render(){\n    let {activeRoom} = this.props\n    return (\n      <div className=\"messages-container panel panel-default\">\n        <div className=\"panel-heading\">\n          <strong>{ activeRoom.name }</strong>\n        </div>\n        <div className=\"panel-body messages\">\n          <MessageList { ...this.props } />\n          <MessageForm { ...this.props } />\n        </div>\n      </div>\n    )\n  }\n}\n\nMessageSection.propTypes = {\n  messages: PropTypes.array.isRequired,\n  activeRoom: PropTypes.object.isRequired,\n  addMessage: PropTypes.func.isRequired\n}\n\nexport default MessageSection","import  React, { Component } from 'react'\nimport io from 'socket.io-client'\nimport RoomSection from './rooms/RoomSection'\nimport UserSection from './users/UserSection'\nimport MessageSection from './messages/MessageSection';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      rooms: [],\n      users: [],\n      messages: [],\n      activeRoom: {},\n      connected: false\n    }\n  }\n\n  componentDidMount() {\n    let socket = this.socket = io('http://localhost:3006/')\n    socket.on('connect', this.onConnect.bind(this))\n    socket.on('disconnect', this.onDisconnect.bind(this))\n    socket.on('room add', this.onAddRoom.bind(this))\n    socket.on('rooms all', this.onShowAllRooms.bind(this))\n    socket.on('message add', this.onMessageAdd.bind(this))\n  }\n  onShowAllRooms(roomsServer) {\n\n    let { rooms } = this.state\n    let { roomId } = this.props\n    rooms = roomsServer\n    this.setState({ rooms })\n\n    if (roomsServer.length < 1) {\n      return;\n    } else {\n      if (roomId) {\n        let activeRoomArray = roomsServer.filter(room => room.id === roomId)\n        this.setRoom(activeRoomArray[0])\n      }\n    }\n  }\n  onMessageAdd(message) {\n    let { messages } = this.state\n    messages.push(message)\n    this.setState({ messages })\n  }\n\n  onConnect(){\n    this.setState({ connected: true })\n  }\n  onDisconnect(){\n    this.setState({ connected: false })\n  }\n\n  onAddRoom(room) {\n    let { rooms } = this.state\n    rooms.push(room)\n    this.setState({ rooms })\n  }\n\n  addRoom(name) { // TODO: send to server\n    this.socket.emit('room add', { name })\n  }\n\n  setRoom(activeRoom) {\n    // Todo: messages filter id\n    this.setState({ messages: [] })\n    this.setState({ activeRoom })\n    \n    this.socket.emit('join room', { room: activeRoom.id })\n  }\n\n  setUserName(name) {\n    let { users } = this.state\n    users.push({ id: users.length, name})\n    this.setState({ users })\n  }\n\n  addMessage(body) {\n    let { activeRoom, messages, users } = this.state\n    let createdAt = new Date()\n    let author = users.length > 0 ? users[0].name : 'anonymous'\n    this.socket.emit('message add', {\n      id: messages.length,\n      roomId: activeRoom.id,\n      body,\n      createdAt,\n      author\n    })\n  }\n\n    render() {\n      return (\n        <div className=\"app\">\n          <div className=\"nav\">\n            <RoomSection\n              {...this.state}\n              addRoom={this.addRoom.bind(this)}\n              setRoom={this.setRoom.bind(this)}\n            />\n            <UserSection\n              {...this.state}\n              setUserName={this.setUserName.bind(this)}\n            />\n          </div>\n          <MessageSection\n            {...this.state}\n            addMessage={this.addMessage.bind(this)}\n          />\n        </div>\n      )\n    }\n}\n\nexport default App","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\nimport App from './components/App'\n\n\nclass Main extends Component {\n  render() {\n    return (\n      <Router>\n          <Route path=\"/\" render={\n            ({ location }) => {\n              const pattern = /\\/room\\// // for test\n              let roomId\n              if (location.pathname.match(pattern)) {\n                roomId = location.pathname.slice(6, location.pathname.length)\n                if (roomId) {\n                  return <App roomId={parseInt(roomId)} />\n                } else {\n                  return <App roomId={false} />\n                }\n              }\n              return <App roomId={false} />\n            }\n          } />\n      </Router>\n    )\n  }\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}